# Workflow name
name: Build and Publish Docker Image to GHCR

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main # Or your default branch name (e.g., master)
  # Allow manual triggering of the workflow
  workflow_dispatch:

# Define the jobs to be executed
jobs:
  build-and-publish:
    # Run the job on the latest Ubuntu environment
    runs-on: ubuntu-latest

    # Steps in the job
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # Use the built-in GITHUB_TOKEN for authentication
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up Docker Buildx (buildkit) for improved build performance
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          file: ./Dockerfile # Path to your Dockerfile
          push: true # Push the image to the registry
          tags: |
            # Tag the image with the repository owner/name and commit SHA
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            # Optionally, tag with 'latest' on pushes to the main branch
            ghcr.io/${{ github.repository }}:latest

      # (Optional) Add a step to clean up dangling images after the build (less critical for GHCR)
      # - name: Clean up
      #   run: docker system prune -f --all
